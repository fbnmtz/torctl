#!/usr/bin/env bash
#
# ############################################################################
# Project: torctl (none)
# File...: torctl.lib
# Created: Tuesday, 2022/11/29 - 20:46:56
# Author.: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Saturday, 2025/08/02 - 09:23:56
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 0.0.4.451
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  >
# ############################################################################
# HISTORY:
#

_xLIB_TORCTL_=true

# define app directory
APP_DIR=$(dirname "$0")

# if executing out of $PATH system (./torctl), redifine APP_DIR
[ "$APP_DIR" == "." ] && cd "$PWD" && APP_DIR=$PWD

# function to load FW rules
firewall_load_rules(){

    case "$(xsys.os)" in
        Linux ) 
            source "$APP_DIR/config/fw-up-linux.sh"  
            source "$APP_DIR/config/fw-down-linux.sh"  
        ;;
        Darwin) 
            source "$APP_DIR/config/fw-up-darwin.sh" 
            source "$APP_DIR/config/fw-down-darwin.sh" 
        ;;
    esac
}

# get current IP Address
current_ip(){    
   curl --silent ifconfig.me
}

# get geo information of current ip address
ip_geo_information(){
   curl --silent  http://ip-api.com/json/"$(current_ip)"
}

# function to start TOR SERVER
start_tor_server(){
    # start tor server with docker
     docker run --rm -d --net host \
        -v "$APP_DIR"/torctl.rc:/etc/tor/torrc \
        -v "$APP_DIR"/torctl.resolv.conf:/etc/resolv.conf \
        --entrypoint "" \
        --name torctl_server \
        m88v2/tor-server:latest \
        /bin/sh -c 'tor -f /etc/tor/torrc' &> /dev/null
}

# setup firewall rules to host use 'tor_server'
firewall_up(){
    
    # load rules based on the current OS
    firewall_load_rules
    
    # test current OS and apply rules
    case "$(xsys.os)" in
        Linux ) fwLinuxUp  ;;
        Darwin) fwDarwinUp ;;
    esac
    
}

# restore default rules or setup a clear firewall
firewall_down(){

    # load rules based on the current OS
    firewall_load_rules
     
    # test current OS and apply rules
    case "$(xsys.os)" in
        Linux ) fwLinuxDown  ;;
        Darwin) fwDarwinDown ;;
    esac
}

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    
# script actions
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    

actionStart(){
    # require ROOT to run
    requireROOT
    
    local title="-> Starting Tor Server"
    local msg=""
    echo "$title"
    if start_tor_server; then
        echo "-> setting up iptables rules"
        firewall_up
        echo '-> Fetching current IP...'
        sleep 2
        tor_ip="$(current_ip)"
        echo "-> CURRENT IP: $tor_ip" 
        
        # set variables for notification
        title="torctl started"
        msg="this is your current IP ($tor_ip)"

        # call system function for notification
        xsys.notify "$title" "$msg"
    else
        msg="(check your docker service)"
        title="-> fail to start server..."
        echo "$title $msg" 
        xsys.notify "torctl started" "$msg"
        exit 2
    fi
}

actionStop(){
    # require ROOT to run
    requireROOT

    local title="-> Stopping Tor Server"
    local msg=""
    echo "$title"
    
    echo "$title"
    docker stop torctl_server &> /dev/null
    echo "-> clear firewall rules"
    firewall_down

    tor_ip="$(current_ip)"
    
    echo "-> CURRENT IP: $tor_ip" 
    
    title="torctl stoped"
    msg="using again your provider IP ($tor_ip)"
    # sys.notify "torctl stoped" "using again yout provider IP $tor_ip"
    xsys.notify "$title" "$msg"
}

actionStatus(){
    local title="torctl status"
    local msg=''
    # check if TorServer is running via docker
    if docker ps | grep torctl &> /dev/null; then
        msg="-> Tor Server is RUNNING..."
    else 
        msg="-> Tor Server is NOT RUNNING"
    fi
    echo "$msg"

    tor_ip="$(current_ip)"
    msg+=" (IP: $tor_ip)"

    echo "-> CURRENT IP: ${tor_ip}..."
    echo "-> Details: (IP Geo Information)"
    # sys.notify "torctl status" "$msg - IP: $(current_ip)"
    xsys.notify "${title}"  "$(echo ${msg/->/})"
    ip_geo_information | jq 
}

actionRestart(){
    actionStop
    actionStart
}